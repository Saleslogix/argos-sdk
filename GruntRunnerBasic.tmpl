<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>Jasmine Spec Runner</title>
  <% css.forEach(function(style){ %>
    <link rel="stylesheet" type="text/css" href="<%= style %>">
  <% }); %>

  <% with (scripts) { %>
    <% [].concat(polyfills, jasmine, vendor, helpers).forEach(function(script){ %>
    <script src="<%= script %>"></script>
    <% }) %>
  <% }; %>

  <script src=".grunt/grunt-contrib-jasmine/boot0.js"></script>
  <script src=".grunt/grunt-contrib-jasmine/boot1.js"></script>

  <!-- Soho Configuration -->
  <script type="application/javascript">
    var SohoConfig = {
      culturesPath: 'libraries/soho/js/cultures/',
      minifyCultures: false,
      personalize: {
        noInit: true
      }
    };
  </script>

  <!-- SData Client Library -->
  <script type="text/javascript" src="libraries/sdata/sdata-client-dependencies-debug.js"></script>
  <script type="text/javascript" src="libraries/sdata/sdata-client-debug.js"></script>

  <!-- Simplate -->
  <script type="text/javascript" src="libraries/Simplate.js"></script>

  <!-- PouchDB -->
  <script type="text/javascript" src="libraries/pouchdb/pouchdb-7.2.1.js"></script>

  <!-- Deep Diff -->
  <script type="text/javascript" src="libraries/deep-diff/deep-diff.min.js"></script>

  <!-- Page.js -->
  <script type="text/javascript" src="libraries/pagejs-1.6.1/page.js"></script>

  <!-- Babel -->
  <script type="text/javascript" src="libraries/babel-polyfill/polyfill.js"></script>

  <!-- moment -->
  <script type="text/javascript" src="libraries/moment/moment-with-locales.js"></script>

  <!-- L20N.js -->
  <script type="text/javascript" src="libraries/l20n/l20n.js"></script>

  <!-- jQuery -->
  <script type="text/javascript" src="libraries/soho/js/jquery-3.6.0.js"></script>

  <!-- SohoXi -->
  <script type="text/javascript" src="libraries/soho/js/sohoxi.js"></script>

  <!-- Redux -->
  <script type="text/javascript" src="libraries/redux/redux.min.js"></script>

  <!-- ICRM Common, depends on moment -->
  <script type="text/javascript" src="libraries/icrm/common.bundle.js"></script>
  <script type="text/javascript" src="libraries/icrm/customization.bundle.js"></script>
  <script type="text/javascript" src="libraries/icrm/services.bundle.js"></script>

  <!-- Provide an empty resource expected by l20n lib. Argos loads l20n files during bootstrap -->
  <script type="application/l20n">{}</script>

  <!-- Dojo -->
  <script type="text/javascript" src="libraries/dojo/dojo/dojo.js" data-dojo-config="parseOnLoad:false, async:true"></script>
  <script type="text/javascript">
  require({
      baseUrl: "./",
        packages: [
            { name: 'dojo', location: 'libraries/dojo/dojo' },
            { name: 'dijit', location: 'libraries/dojo/dijit' },
            { name: 'snap', location: 'libraries/snap', main: 'snap' },
            { name: 'argos', location: 'src-out' },
            { name: 'tests', location: 'tests' }
        ],
        map: {
            '*': {
                'Sage/Platform/Mobile': 'argos'
            }
        }
  });
  </script>
  <% css.forEach(function(style){ %>
  <link rel="stylesheet" type="text/css" href="<%= style %>">
  <% }); %>
</head>
<body>
  <script type="text/javascript">
  function buildContext() {
        var filePaths = {
          './localization/locales/argos': [
            'strings.l20n',
            'regional.l20n'
          ]
        };
        var supportedLocales = [
          'en'
        ];
        var ctx = L20n.getContext();
        var defaultLocale = 'en';
        var currentLocale = 'en';

        Object.keys(filePaths).forEach(function(path) {
          var files = filePaths[path];
          files.forEach(function(file) {
            ctx.linkResource(function(locale) {
              return [path, locale, file].join('/');
            });
          });
        });
        ctx.registerLocales(defaultLocale, supportedLocales);
        ctx.requestLocales(currentLocale);
        window.localeContext = ctx;
        window.defaultLocaleContext = ctx;
        window.regionalContext = ctx;
        return ctx;
      }

      <% with (scripts) { %>
      var ctx = buildContext();
      ctx.ready(function() {
        define('jquery', function() {
          return window.$;
        });
        require([
          'tests/all'
        ]);
      });

      require([
        '<%= [].concat(scripts.reporters).join("','") %>'
      ]);
      <% }; %>
  </script>
</body>
</html>
